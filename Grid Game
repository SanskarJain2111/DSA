class Solution {
    public long gridGame(int[][] grid) {
        int n = grid[0].length;
        long[] row1 = new long[n];
        long[] row2 = new long[n];
        row1[0] = grid[0][0];
        row2[0] = grid[1][0];
        for(int i = 1; i < n; i++) {
            row1[i] = grid[0][i] + row1[i - 1];
            row2[i] = grid[1][i] + row2[i - 1];
        }
        long ans = Long.MAX_VALUE;
        for(int i = 0; i < n; i++) {
            long r1 = row1[n - 1] - row1[i];
            long r2 = 0;
            if(i > 0) r2 = row2[i - 1];
            else r2 = 0;
            long max = Math.max(r1, r2);
            ans = Math.min(ans, max);
        }
        return ans;
    }
}
